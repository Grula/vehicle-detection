

4.1 Vgg16
VGG16 je vrsta modela Konvolutivne neuronske mreze. Arhitektura je data na slici, sluzi za nalazenje karakteristika . U nasem slucaju potrebno je klasifikovati slike (4 klase) i
pronaci Okvire objekta na slici. Koristimo mrezu kao jednostepeni model, izlaz VGG16 mreze ce se racvati u 2 duboko povezana nivoa. Prvi nivo ce sluziti za pronalazenje okvira i  izlaz mreze ce biti sa 4 neurona sa sigmoidnom aktivacionom funkcjom, dok drugi deo mreze ce takodje imati izlaz od 4 neurona sa softmax funkcijom za klasifikaciju objekta.  
Koriscenem mreze vgg16 postizemo rezultate koa i ocekivano. Mreza zbog nedostatka podataka ne uci nista, konvergira u lokalni min nakon 37 epoha i daje sledece rezultate:
	car:  car
	truck:  car
	bus:  car
	motorcycle:  car
kao i slike:

	#########
	#########
	#########

iz rezultata mozemo da zakljucimo da je regresivnom metodom skoro pa nemoguce dobiti dobre rezultate kako su skoro svi okviri isto pozicionirani. Nedovoljna kolicina podataka
drasticno doprinosi time. Takodje predikcija se svodi na kola kako je ta klasa najzastupljenija u nasim podacima.

Treniramo vgg16 sa transfer learning metodom od tezina IMAGENET-a

TODO: imam poteskoca sa memorijom graficke karte, in progress 
...


4.2 YOLO - transfer learning
Kako je YOLO jedan od boljih standarda, pokusavamo da izvrsimo predikciju na slikama bez ikakvog dodatnoh ucenja. Tezine preuzimamo od oficijalnog rada koji je 
treniran na COCO datasetu koji sadrzi 80 klasa i 328 hiljada slika. Detekcija objekta je vrsena na sledecim slikama i dobijeni rezultati su:

\begin{center}
\begin{tabular}{c c}
\hline class & prediction \\
\hline\hline
 car_0 & truck \\ 
 car_1 & car \\ 
 truck & truck  \\  
 bus & None \\   
 motorbike_0 & None \\  
 motorbike_1 & motorbike \\  
\end{tabular}
\end{center}

Iz rezultata, pa i iz samih slika mozemo da vidimo da mreza daje solidne rezultate pri detekciji kamiona i motor na slikama za validaciju. Pravi gresku  automobilima sa verovatnocom >90%, a autobus i jedan motor se uopste ne detektuje.


Kako bi smo poboljsali rezultat, pomocu transfernog ucenja doucavamo model na nasim slikama. Za metod transfernog ucenja koristicemo mrezu Yolo v4. Razlike u odnosu na YOLO v3 su sitna poboljsanja i malo modifikovana funkcija gubitka.
Funkcija gubitka je .... (Iskodirati sume...) .... .
Slike su trenirane na rezoluciji 416x416, sveukupno 150epoha, dok nakon 50 epoha stepen ucenja se postepeno smanjuje kako bi smo se priblizili globalnom minimumu.
Dobijeni rezultati su sledeci

\begin{center}
\begin{tabular}{c c}
\hline class & prediction \\
\hline\hline
 car_0 & car \\ 
 car_1 & car \\ 
 truck & car  \\  
 bus & car \\   
 motorbike_0 & motorbike \\  
 motorbike_1 & motorbike \\  
\end{tabular}
\end{center}

Iz rezultata mozemo odmah da zakljucimo da kolicina podataka koja je koriscena za klase BUS i TRUCK je nedovoljna, pa ih model ne klasifikuje dovoljno. Sa slika mozemo da vidimo da okviri pristojno gadjaju same objekte.
Tokom ucenja fje gubitka i preciznosti izgledaju ovako 

Grafikoni koji ce doci uskoro jer se mreza jso trenira

4.3 Metode prosirivanja podataka
Podatke prosirujemo naprednim augmentacijama koriscenjem StyleGAN2 arhitekture. Oficijalni kod je pisan u bilboteci Tensorflow 1, ali zbog zastarelosti same biblioteke kod unapredjujemo u Tensorflow 2 verziju. Generisane slike su dimenzija 512x512. Modeli su trenirani na NVIDIA Tesla P100-PCIE GPU od 12h do 48h.

Podatke prosirujemo tako da dobijemo najveci balans izmedju klasa.

4.3.1 Autobus i Kamion
Treniranje stylegan-a na ovim klasama slika predstavlja najveci izazov i guranje granica a da nedodje do velikih problema GAN-ova. Jedan on njih Model Collapse 
koji moze da se desi da nakon ucenja ganovi proizvode samo jednu vrstu slika. Zakljucujemo da ako se tako nesto desi u nasem modelu, sam model bi proizvodio samo
1 vrstu autobusa ili kamiona. Iz sledecih rezultata zakljucujemo da smo taku vrstu problema zaobisli kako mozemo videti iz sledecih slika.

Autobus FID score iznosi : FID (different): 308.167 za poslednji ciklus treniranja a dok je prvi iznosio FID : 369.161
Kamion FID score iznosi: FID (different): 188.504 za poslednji ciklus treniranja a dok je prvi iznosio FID : 432.851

Zapazanje! Fid score je izuzetno nestabilan kod male kolicine slika, tako da mozda nije najreprezantativnija mera.


Treniranje je trajalo ukupno 24h i koristilo je dvesta hiljada slika. Iz funkcija gubitka mozemo videti da daljem treniranju model ne uci nista novo.

### Grafikoni ###


4.3.2 Automobil i Motorcikl
Za razliku od Kamiona i Autobusa, raspolazemo sa vecom kolicinom podataka pa samim tim latentni prostor sa kojim model raspolaze je veci. Zbog toga dobijamo 
automobile koji izgledaju drugcije od vec postojecih, dok to nije slucaj sa kamionima i autobusima.

Treniranje za automobile je oduzleo oko 36h i koristilo je trista hiljada slika. Iz grafikona mozemo videti da se funkcije gubitka postaje 'konstantna'.
FID: 87.464 za poslednji ciklus treniranja a dok je prvi iznosio  FID : 107.660

Treniranje za motorcikle je trajalo 48h i koristilo cetristo hiljada slika. Takodje iz grafikona za generator mozemo videti da funkcija udara u plato i zbog
toga prestajemo sa treniranjem

FID: 151.134 za poslednji ciklus treniranja a dok je prvi iznosio  FID : 386.823

### Grafikoni ###



4.3.3 dobijeni rezultati
Podaci koji se dobiju koje covek moze da razazna na klase, uzimaju se u obzir. Slike koje imaju male artifakte i zamucneosti gledamo kao vrstu
dodate regularizacije. Problem koji se javlja je stavljanje okvira na pojedinacne slike i takav problem prevazilazimo koriscenjem vec treniranog V3 yolo modela
kako on sam daje solidne rezultate kod stavljanja okvira, takodje taj model se razlikuje od verzije YOLO cetri modela koji mi koristimo kod transfernog ucenja tako da nema curenja podataka izmedju modela. Modeli koirste slicnu arhitekturu ali aktivacione funkcije su promenjene te samim tim tezine koje se nalaze u samom modelu se razlikuju.


- Rezultati state of art YoloV4


- Rezultati na najobicnijim augmenatcijama

- Ganovi sa :100k, 200k, 300k?, 400k?

Prosecna preciznnost nasih modela nad objektima za validaciju

             base      wihtout   basicaug   stylegan
--------------------------------------------------------
car      :   0.73   |  0.79    |  0.88    |  0.94    |
--------------------------------------------------------
motorbike:   0.66   |  0.14    |  0.90    |  0.71    |
--------------------------------------------------------
bus      :   0.0    |  0.00    |  0.16    |  0.00    |
--------------------------------------------------------
truck    :   0.92   |  0.00    |  0.00    |  0.00    |
--------------------------------------------------------



Broj dobro klasifikovanih klasa
             base      wihtout   basicaug   stylegan
--------------------------------------------------------
car      :  84 / 89  |  89 / 89   |  89 / 89    |  89 / 89    |
--------------------------------------------------------
motorbike:   96 / 97  | 71 / 97   |  97 / 97    |  97 / 97    |
--------------------------------------------------------
bus      :   0 / 1   |  0 / 1   |  1 / 1    |  0 / 1    |
--------------------------------------------------------
truck    :   1 / 1   |  0 / 1   |  0 / 1    |  0 / 1   |
--------------------------------------------------------



4.4 Treniranje detekcije objekta sa augmentovanim podacima
- Treniuranje mreza i novodibijeni rezultati
 Mreza koju smo koristili prilagodjena je za Tensorflow 2.x, Baza mreze je Darknet53, i koristi Mish aktivacionu funkciju.

- Poboljsanja koja smo dobili ovim korakom i ako
- Da li su poboljsanja dovoljno dobra ili i dalje treba vecinska kolicina podataka
- Sta zakljucujemo iz dobijenih podataka i sta bi moglo dalje da se uradi

Iz rezultata mozemo da vidimo da dodavanjem trivijalne i ne trivijlane augmentacije se dobijaju malo bolji rezultati. Detekcija Autombila 
je dobila na poboljsanju verovatnoce za detekciju, kao i sam broj klasa koji ih prepoznaje. Motorciklisit imaju najbolje poboljsanje 
verovatnoce kod trivijalnog dodavanja augmetnacija. Na zalost ne mozemo da vidimo poboljsanje kod Kamiona i Autobusa. Jedan od razloga je 
sto slika validacije dosta izgledao kao (pickup truck) koji se vodi kao automobil. Jedno od mogucih poboljsanja je da se vise trenira stylegan (ali verovatno nece dati bolje rezultate), koristi neka druga vrsta kreiranja slika ili kombinacija takvih.


